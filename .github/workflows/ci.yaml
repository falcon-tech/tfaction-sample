name: CI

on:
  pull_request:
    branches: main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
  pull-requests: write

env: 
  TRIVY_CONFIG: ${{ github.workspace }}/trivy.yaml
  TRIVY_IGNOREFILE: ${{ github.workspace }}/.trivyignore

jobs:
  setup:
    name: Set up
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        shell: bash
    outputs:
      targets: ${{ steps.list-targets.outputs.targets }}
      modules: ${{ steps.list-targets.outputs.modules }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
 
    - name: Install tools
      uses: aquaproj/aqua-installer@v3.1.0
      with:
        aqua_version: v2.40.0      
    
    - name: Get changed working directory
      uses: suzuki-shunsuke/tfaction/list-targets@v1.14.0
      id: list-targets

  test-module:
    name: Test module (${{ matrix.target }})
    needs: setup    
    if: join(fromJSON(needs.setup.outputs.modules), '') != ''    
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        shell: bash
    env:
      TFACTION_TARGET: ${{ matrix.target }}
      TFLINT_CONFIG_FILE: ${{ github.workspace }}/modules/.tflint.hcl
    strategy:
      fail-fast: true
      matrix:
        target: ${{ fromJSON(needs.setup.outputs.modules) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install tools
        uses: aquaproj/aqua-installer@v3.1.0
        with:
          aqua_version: v2.40.0

      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app_id: ${{ secrets.TFACTION_GITHUB_APP_ID }}
          private_key: ${{ secrets.TFACTION_GITHUB_APP_PRIVATE_KEY }}

      - name: Test(module)
        uses: suzuki-shunsuke/tfaction/test-module@v1.14.0
        with:
          github_token: ${{ steps.generate_token.outputs.token }}

  plan:
    name: Plan (${{ matrix.target.target }})
    needs: setup    
    if: join(fromJSON(needs.setup.outputs.targets), '') != ''    
    runs-on: ubuntu-latest
    timeout-minutes: 5
    defaults:
      run:
        shell: bash
    env:
      TFACTION_TARGET: ${{ matrix.target.target }}
      TFACTION_WORKING_DIR: ${{ matrix.target.working_directory }}
      TFACTION_JOB_TYPE: ${{ matrix.target.job_type }}
      TFLINT_CONFIG_FILE: ${{ github.workspace }}/environments/.tflint.hcl
    strategy:
      fail-fast: true
      matrix:
        target: ${{ fromJSON(needs.setup.outputs.targets) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
  
      - name: Install tools
        uses: aquaproj/aqua-installer@v3.1.0
        with:
          aqua_version: v2.40.0

      - name: Generate token
        id: generate_token
        uses: actions/create-github-app-token@v1
        with:
          app_id: ${{ secrets.TFACTION_GITHUB_APP_ID }}
          private_key: ${{ secrets.TFACTION_GITHUB_APP_PRIVATE_KEY }}

      - name: Set up
        uses: suzuki-shunsuke/tfaction/setup@v1.14.0
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: Test
        uses: suzuki-shunsuke/tfaction/test@v1.14.0
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

      - name: Plan
        uses: suzuki-shunsuke/tfaction/plan@v1.14.0
        with:
          github_token: ${{ steps.generate_token.outputs.token }}
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}